{
	"info": {
		"_postman_id": "28f5b9cb-98d7-4036-ac2a-ca8bec5aa5e9",
		"name": "Usuario",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29277635",
		"_collection_link": "https://red-station-744766.postman.co/workspace/Parcial2Web~8138687e-5c55-4eb8-be9f-db404ad840a2/collection/29277635-28f5b9cb-98d7-4036-ac2a-ca8bec5aa5e9?action=share&source=collection_link&creator=29277635"
	},
	"item": [
		{
			"name": "Create usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"usuario_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"num_cedula\": \"1444567495\",\r\n    \"nombre\": \"John Smith\",\r\n    \"grupo_investigacion\":\"TICSW\",\r\n    \"num_extension\": \"01234567\",\r\n    \"rol\": \"Profesor\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/usuarios",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios"
					]
				},
				"description": "Se decidio hacer porque es la base para realizar operaciones con bonos"
			},
			"response": []
		},
		{
			"name": "Create usuario decana",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"usuario_id_2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"num_cedula\": \"1444567495\",\r\n    \"nombre\": \"John Smith\",\r\n    \"grupo_investigacion\":\"TICSW\",\r\n    \"num_extension\": \"01234567\",\r\n    \"rol\": \"Decana\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/usuarios",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios"
					]
				},
				"description": "Este caso se decidio probar para revisar que se peude crear un usuario con otro rol. Ademas sirve para porbar casos como borrado de bonos"
			},
			"response": []
		},
		{
			"name": "Create usuario 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"usuario_id_3\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"num_cedula\": \"1444567495\",\r\n    \"nombre\": \"John Smith\",\r\n    \"grupo_investigacion\":\"TICSW\",\r\n    \"num_extension\": \"01234567\",\r\n    \"rol\": \"Profesor\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/usuarios",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios"
					]
				},
				"description": "Se decidio hacer porque es la base para realizar operaciones con bonos y tambien para probar otros casos donde el usuario tenga bonos"
			},
			"response": []
		},
		{
			"name": "Create bono",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"bono_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"monto\": 10,\r\n    \"calificacion\": 4,\r\n    \"palabra_clave\": \"clave\",\r\n    \"usuario\": {\r\n                    \"id\": {{usuario_id_3}},\r\n                    \"num_cedula\": \"1444567495\",\r\n                    \"nombre\": \"John Smith\",\r\n                    \"grupo_investigacion\":\"TICSW\",\r\n                    \"num_extension\": \"01234567\",\r\n                    \"rol\": \"Profesor\"\r\n                }\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/bonos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"bonos"
					]
				},
				"description": "Se hace porque confirma que se pueda crear un bono"
			},
			"response": []
		},
		{
			"name": "Create usuario con grupo invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El usuario no puede ser creado porque tiene un grupo de investigación no válido\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"num_cedula\": \"1444567495\",\r\n    \"nombre\": \"John Smith\",\r\n    \"grupo_investigacion\":\"nan\",\r\n    \"num_extension\": \"01234567\",\r\n    \"rol\": \"Profesor\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/usuarios",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios"
					]
				},
				"description": "Se hace para ver que no se pueda crear un usuario con rol de usuario cuyo grupo sea invalido"
			},
			"response": []
		},
		{
			"name": "Create usuario con num extension invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El usuario no puede ser creado porque el numero de extension no es de 8 digitos\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"num_cedula\": \"1444567495\",\r\n    \"nombre\": \"John Smith\",\r\n    \"grupo_investigacion\":\"TICSW\",\r\n    \"num_extension\": \"0\",\r\n    \"rol\": \"Decana\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/usuarios",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios"
					]
				},
				"description": "Se hace para ver que no se pueda crear un usuario con rol de decana cuyo numero de extension no tenga 8 digitos"
			},
			"response": []
		},
		{
			"name": "Get usuario by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/usuarios/{{usuario_id_1}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id_1}}"
					]
				},
				"description": "Se hace para ver que retorne un usuario con id valido"
			},
			"response": []
		},
		{
			"name": "Get unexisting usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El usuario con el id dado no fue encontrado\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/usuarios/0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios",
						"0"
					]
				},
				"description": "Se hace para ver que retorne error cuando se busca un usuario con id inexistente"
			},
			"response": []
		},
		{
			"name": "Delete usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/usuarios/{{usuario_id_1}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id_1}}"
					]
				},
				"description": "Se hace para ver que se borre correctamente un usuario"
			},
			"response": []
		},
		{
			"name": "Delete unexisting usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El usuario con el id dado no fue encontrado\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/usuarios/0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios",
						"0"
					]
				},
				"description": "Se hace para ver que no se pueda borrar un usuario con id inexistente"
			},
			"response": []
		},
		{
			"name": "Delete usuario con rol decana",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El usuario con el id dado no puede ser eliminado porque tiene rol de Decana\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/usuarios/{{usuario_id_2}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id_2}}"
					]
				},
				"description": "Se hace para ver que no se pueda borrar un usuario con rol de decana"
			},
			"response": []
		},
		{
			"name": "Delete usuario con bonos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El usuario con el id dado no puede ser eliminado porque tiene bonos asociados\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/usuarios/{{usuario_id_3}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id_3}}"
					]
				},
				"description": "Se hace para ver que no se pueda borrar un usuario con bonos asociados"
			},
			"response": []
		}
	]
}